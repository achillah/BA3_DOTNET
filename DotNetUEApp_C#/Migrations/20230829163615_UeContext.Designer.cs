// <auto-generated />
using System;
using DotNetUEApp_C_.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetUEApp_C_.Migrations
{
    [DbContext(typeof(DbDueContext))]
    [Migration("20230829163615_UeContext")]
    partial class UeContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetUEApp_C_.Models.ActiviteApprentissage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EnseignantId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationAAId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniteEtudeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnseignantId");

                    b.HasIndex("EvaluationAAId");

                    b.HasIndex("UniteEtudeId");

                    b.ToTable("ActiviteApprentissages");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Capacite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniteEtudeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniteEtudeId");

                    b.ToTable("Capacites");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Competence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniteEtudeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniteEtudeId");

                    b.ToTable("Competences");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Cursus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Implantation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cursus");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Enseignant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniteEtudeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniteEtudeId");

                    b.ToTable("Enseignants");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdUniteEtude")
                        .HasColumnType("int");

                    b.Property<int>("Mois")
                        .HasColumnType("int");

                    b.Property<string>("NoteFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PourcentageFinal")
                        .HasColumnType("int");

                    b.Property<string>("PourcentageRemediable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.InfoUe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlocEtude")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cycle")
                        .HasColumnType("int");

                    b.Property<string>("Langue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LangueEvaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orientation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quadrimestre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InfoUe");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.UniteEtude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acquis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlocEtude")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContenuSynthetique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int>("CursusId")
                        .HasColumnType("int");

                    b.Property<int>("Cycle")
                        .HasColumnType("int");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<int?>("IdCursus")
                        .HasColumnType("int");

                    b.Property<int?>("IdDepartement")
                        .HasColumnType("int");

                    b.Property<int?>("IdResponsableUe")
                        .HasColumnType("int");

                    b.Property<string>("Langue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LangueEvaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodeApprendtissage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteUE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orientation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quadrimestre")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursusId");

                    b.HasIndex("DepartementId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("UniteEtudes");
                });

            modelBuilder.Entity("UniteEtudeUniteEtude", b =>
                {
                    b.Property<int>("CorequisesId")
                        .HasColumnType("int");

                    b.Property<int>("PrerequisesId")
                        .HasColumnType("int");

                    b.HasKey("CorequisesId", "PrerequisesId");

                    b.HasIndex("PrerequisesId");

                    b.ToTable("UniteEtudeUniteEtude");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.ActiviteApprentissage", b =>
                {
                    b.HasOne("DotNetUEApp_C_.Models.Enseignant", null)
                        .WithMany("ListActiviteApprentissages")
                        .HasForeignKey("EnseignantId");

                    b.HasOne("DotNetUEApp_C_.Models.Evaluation", "EvaluationAA")
                        .WithMany()
                        .HasForeignKey("EvaluationAAId");

                    b.HasOne("DotNetUEApp_C_.Models.UniteEtude", null)
                        .WithMany("ListActiviteApprentissages")
                        .HasForeignKey("UniteEtudeId");

                    b.Navigation("EvaluationAA");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Capacite", b =>
                {
                    b.HasOne("DotNetUEApp_C_.Models.UniteEtude", null)
                        .WithMany("ListCapacites")
                        .HasForeignKey("UniteEtudeId");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Competence", b =>
                {
                    b.HasOne("DotNetUEApp_C_.Models.UniteEtude", null)
                        .WithMany("ListCompetences")
                        .HasForeignKey("UniteEtudeId");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Enseignant", b =>
                {
                    b.HasOne("DotNetUEApp_C_.Models.UniteEtude", null)
                        .WithMany("ListTitulaireAA")
                        .HasForeignKey("UniteEtudeId");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.UniteEtude", b =>
                {
                    b.HasOne("DotNetUEApp_C_.Models.Cursus", "Cursus")
                        .WithMany()
                        .HasForeignKey("CursusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetUEApp_C_.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetUEApp_C_.Models.Enseignant", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");

                    b.Navigation("Cursus");

                    b.Navigation("Departement");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("UniteEtudeUniteEtude", b =>
                {
                    b.HasOne("DotNetUEApp_C_.Models.UniteEtude", null)
                        .WithMany()
                        .HasForeignKey("CorequisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetUEApp_C_.Models.UniteEtude", null)
                        .WithMany()
                        .HasForeignKey("PrerequisesId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.Enseignant", b =>
                {
                    b.Navigation("ListActiviteApprentissages");
                });

            modelBuilder.Entity("DotNetUEApp_C_.Models.UniteEtude", b =>
                {
                    b.Navigation("ListActiviteApprentissages");

                    b.Navigation("ListCapacites");

                    b.Navigation("ListCompetences");

                    b.Navigation("ListTitulaireAA");
                });
#pragma warning restore 612, 618
        }
    }
}
